const jestDom = require("eslint-plugin-jest-dom");
const testingLibrary = require("eslint-plugin-testing-library");
const babelParser = require("@babel/eslint-parser");
const pluginJest = require("eslint-plugin-jest");
const playwright = require("eslint-plugin-playwright");
const markdown = require("eslint-plugin-markdown");
const json = require("eslint-plugin-json");
const eslintPluginPrettierRecommended = require("eslint-plugin-prettier/recommended");
const globals = require("globals");

const js = require("@eslint/js");

const { FlatCompat } = require("@eslint/eslintrc");
const { fixupConfigRules } = require("@eslint/compat");

const flatCompat = new FlatCompat();

console.log();
module.exports = [
  {
    ...js.configs.recommended,
  },
  ...markdown.configs.recommended,
  json.configs.recommended,
  ...fixupConfigRules(flatCompat.extends("airbnb")),
  ...fixupConfigRules(flatCompat.extends("airbnb/hooks")),
  eslintPluginPrettierRecommended,
  ...fixupConfigRules(flatCompat.extends("turbo")),
  {
    plugins: {
      "jest-dom": jestDom,
      "testing-library": testingLibrary,
    },

    languageOptions: {
      parser: babelParser,
      sourceType: "module",

      parserOptions: {
        requireConfigFile: false,

        babelOptions: {
          presets: ["@babel/preset-react"],
        },

        allowImportExportEverywhere: true,
      },
    },

    settings: {
      "import/resolver": {
        jsconfig: {
          config: "jsconfig.json",
        },
      },
    },

    rules: {
      "import/order": [
        "error",
        {
          alphabetize: {
            order: "asc",
            caseInsensitive: true,
          },

          "newlines-between": "always",
        },
      ],

      "no-restricted-imports": [
        "error",
        {
          patterns: ["@mui/*/*/*", "!@mui/material/test-utils/*"],
        },
      ],

      "react/jsx-filename-extension": [
        1,
        {
          extensions: [".js"],
        },
      ],

      "react/jsx-props-no-spreading": "off",
      "react/prop-types": "off",
      "react/react-in-jsx-scope": "off",
      "react/require-default-props": "off",
      "react-hooks/exhaustive-deps": "off",
      "import/no-extraneous-dependencies": "off",
      "no-unused-vars": [
        "warn",
        {
          caughtErrors: "none",
        },
      ],
    },
  },
  {
    files: ["**/*.test.js", "**/jest.setup.js"],
    plugins: {
      jest: pluginJest,
      "jest-dom": jestDom,
      "testing-library": testingLibrary,
    },
    ...pluginJest.configs["flat/recommended"],
    ...jestDom.configs["flat/recommended"],
    ...testingLibrary.configs["flat/dom"],
    languageOptions: {
      globals: {
        ...pluginJest.environments.globals.globals,
        ...globals.browser,
        ...globals.jest,
        ...globals.node,
      },
    },
  },
  {
    // .snap.js files are autogenerated by jest and may contain irregular
    // whitespace in string templates
    files: ["**/*.snap.js"],
    rules: {
      "no-irregular-whitespace": ["error", { skipTemplates: true }],
    },
  },
  {
    files: ["**/*.spec.js"],
    ...playwright.configs["flat/recommended"],
  },
  {
    languageOptions: {
      globals: {
        ...globals.browser,
        ...globals.node,
      },
    },
  },
];
