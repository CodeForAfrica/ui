FROM node:18-alpine as node-alpine

RUN apk update \
    && apk upgrade


FROM node-alpine as base

RUN apk add --no-cache libc6-compat

ARG PNPM_VERSION=8.5.0

RUN corepack enable && corepack prepare pnpm@${PNPM_VERSION} --activate

WORKDIR /workspace

COPY pnpm-lock.yaml .

RUN pnpm fetch


FROM base as builder


WORKDIR /workspace

COPY *.yaml *.json ./
COPY packages ./packages
COPY apps/codeforafrica ./apps/codeforafrica

# Use virtual store: https://pnpm.io/cli/fetch#usage-scenario
RUN pnpm install --recursive --offline --frozen-lockfile

ARG PORT=3000 \
    MONGO_URL \
    PAYLOAD_SECRET

RUN pnpm build-next --filter=codeforafrica

ARG PAYLOAD_PUBLIC_APP_URL=${PAYLOAD_PUBLIC_APP_URL}

RUN pnpm build-payload --filter=codeforafrica

FROM builder as runner

RUN rm -rf /var/cache/apk/*

ARG PAYLOAD_PUBLIC_APP_URL \
    PORT

ENV NODE_ENV=production \
    PAYLOAD_PUBLIC_APP_URL=${PAYLOAD_PUBLIC_APP_URL} \
    PORT=${PORT} \ 
    PAYLOAD_PUBLIC_PORT=${PORT} \
    PAYLOAD_CONFIG_PATH="dist/payload.config.js" \
    PAYLOAD_SECRET=${PAYLOAD_SECRET}

WORKDIR /workspace/apps/codeforafrica

EXPOSE ${PORT}

ENTRYPOINT [ "node", "dist/server.js" ]
