services:
  charterafrica:
    build:
      secrets:
        - sentry_auth_token
      context: .
      target: charterafrica-runner
      args:
        - MONGO_URL=mongodb://${MONGO_INITDB_ROOT_USERNAME:-root}:${MONGO_INITDB_ROOT_PASSWORD:-rootpassword}@host.docker.internal:${MONGODB_PORT:-27017}/charterafrica?authSource=admin&directConnection=true
        - PAYLOAD_SECRET_KEY
        - SENTRY_ENVIRONMENT
        - SENTRY_ORG
        - SENTRY_PROJECT
    environment:
      S3_ACCESS_KEY_ID: ${S3_ACCESS_KEY_ID}
      S3_SECRET_ACCESS_KEY: ${S3_SECRET_ACCESS_KEY}
      S3_BUCKET: ${S3_BUCKET}
      S3_REGION: ${S3_REGION}
      MONGO_URL: mongodb://${MONGO_INITDB_ROOT_USERNAME:-root}:${MONGO_INITDB_ROOT_PASSWORD:-rootpassword}@host.docker.internal:${MONGODB_PORT:-27017}/charterafrica?authSource=admin&directConnection=true
      PAYLOAD_SECRET_KEY: ${PAYLOAD_SECRET_KEY}
      SENTRY_ORG: ${SENTRY_ORG}
      SENTRY_ENVIRONMENT: ${SENTRY_ENVIRONMENT}
      SENTRY_PROJECT: ${SENTRY_PROJECT}
    ports:
      - 3000:3000

  civicsignalblog:
    build:
      secrets:
        - sentry_auth_token
      context: .
      target: civicsignalblog-runner
      args:
        - MONGO_URL=${MONGO_URL}
        - PAYLOAD_SECRET
        - SENTRY_ENVIRONMENT
        - SENTRY_ORG
        - SENTRY_PROJECT
    environment:
      S3_ACCESS_KEY_ID: ${S3_ACCESS_KEY_ID}
      S3_SECRET_ACCESS_KEY: ${S3_SECRET_ACCESS_KEY}
      S3_BUCKET: ${S3_BUCKET}
      S3_REGION: ${S3_REGION}
      MONGO_URL: mongodb://${MONGO_INITDB_ROOT_USERNAME:-root}:${MONGO_INITDB_ROOT_PASSWORD:-rootpassword}@host.docker.internal:${MONGODB_PORT:-27017}/codeforafrica?authSource=admin&directConnection=true
      PAYLOAD_SECRET: ${PAYLOAD_SECRET}
      SENTRY_ORG: ${SENTRY_ORG}
      SENTRY_ENVIRONMENT: ${SENTRY_ENVIRONMENT}
      SENTRY_PROJECT: ${SENTRY_PROJECT}
    ports:
      - 3000:3000

  codeforafrica:
    depends_on:
      mongodb:
        condition: service_healthy
    build:
      secrets:
        - sentry_auth_token
      context: .
      target: codeforafrica-runner
      args:
        - MONGODB_URL=mongodb://${MONGO_INITDB_ROOT_USERNAME:-root}:${MONGO_INITDB_ROOT_PASSWORD:-rootpassword}@host.docker.internal:${MONGODB_PORT:-27017}/codeforafrica?authSource=admin&directConnection=true
        - PAYLOAD_SECRET
        - SENTRY_ENVIRONMENT
        - SENTRY_ORG
        - SENTRY_PROJECT
    environment:
      S3_ACCESS_KEY_ID: ${S3_ACCESS_KEY_ID}
      S3_SECRET_ACCESS_KEY: ${S3_SECRET_ACCESS_KEY}
      S3_BUCKET: ${S3_BUCKET}
      S3_REGION: ${S3_REGION}
      MONGODB_URL: mongodb://${MONGO_INITDB_ROOT_USERNAME:-root}:${MONGO_INITDB_ROOT_PASSWORD:-rootpassword}@host.docker.internal:${MONGODB_PORT:-27017}/codeforafrica?authSource=admin&directConnection=true
      PAYLOAD_SECRET: ${PAYLOAD_SECRET}
      SENTRY_ORG: ${SENTRY_ORG}
      SENTRY_ENVIRONMENT: ${SENTRY_ENVIRONMENT}
      SENTRY_PROJECT: ${SENTRY_PROJECT}
    ports:
      - 3000:3000

  climatemappedafrica:
    build:
      context: .
      target: climatemappedafrica-runner
      args:
        - HURUMAP_API_URL
    environment:
      HURUMAP_API_URL: ${HURUMAP_API_URL}
      S3_UPLOAD_KEY: ${S3_UPLOAD_KEY}
      S3_UPLOAD_SECRET: ${S3_UPLOAD_SECRET}
      S3_UPLOAD_BUCKET: ${S3_UPLOAD_BUCKET}
      S3_UPLOAD_REGION: ${S3_UPLOAD_REGION}
    ports:
      - 3000:3000

  mongodb:
    image: mongo:6.0.13
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME:-root}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD:-rootpassword}
    ports:
      - 27017:27017
    volumes:
      - db_data:/data/db
      - ./mongo-keyfile:/etc/mongo-keyfile
    extra_hosts:
      - "host.docker.internal:host-gateway"
    healthcheck:
      # https://medium.com/workleap/the-only-local-mongodb-replica-set-with-docker-compose-guide-youll-ever-need-2f0b74dd8384
      test: echo "try { rs.status() } catch (err) { rs.initiate({_id:'rs0',members:[{_id:0,host:'host.docker.internal:27017'}]}) }" | mongosh --port 27017 --quiet
      interval: 5s
      timeout: 30s
      start_period: 0s
      retries: 30
    command:
      ["--replSet", "rs0", "--bind_ip_all", "--keyFile", "/etc/mongo-keyfile"]

  pesayetu:
    build:
      context: .
      target: pesayetu-runner
      args:
        - WORDPRESS_URL
        - WORDPRESS_PREVIEW_SECRET
        - WORDPRESS_APPLICATION_USERNAME
        - WORDPRESS_APPLICATION_PASSWORD
        - JWT_SECRET_KEY
        - HURUMAP_API_URL
    environment:
      WORDPRESS_URL: ${WORDPRESS_URL}
      WORDPRESS_PREVIEW_SECRET: ${WORDPRESS_PREVIEW_SECRET}
      WORDPRESS_APPLICATION_USERNAME: ${WORDPRESS_APPLICATION_USERNAME}
      WORDPRESS_APPLICATION_PASSWORD: ${WORDPRESS_APPLICATION_PASSWORD}
      JWT_SECRET_KEY: ${JWT_SECRET_KEY}
      HURUMAP_API_URL: ${HURUMAP_API_URL}
      S3_UPLOAD_KEY: ${S3_UPLOAD_KEY}
      S3_UPLOAD_SECRET: ${S3_UPLOAD_SECRET}
      S3_UPLOAD_BUCKET: ${S3_UPLOAD_BUCKET}
      S3_UPLOAD_REGION: ${S3_UPLOAD_REGION}
    ports:
      - 3000:3000

  roboshield:
    build:
      secrets:
        - sentry_auth_token
      context: .
      target: roboshield-runner
      args:
        - MONGO_URL
        - PAYLOAD_SECRET
        - SENTRY_ORG
        - SENTRY_ENV
        - SENTRY_PROJECT
    environment:
      S3_ACCESS_KEY_ID: ${S3_ACCESS_KEY_ID}
      S3_SECRET_ACCESS_KEY: ${S3_SECRET_ACCESS_KEY}
      S3_BUCKET: ${S3_BUCKET}
      S3_REGION: ${S3_REGION}
      MONGO_URL: ${MONGO_URL}
      PAYLOAD_SECRET: ${PAYLOAD_SECRET}
      SENTRY_ORG: ${SENTRY_ORG}
      SENTRY_ENVIRONMENT: ${SENTRY_ENVIRONMENT}
      SENTRY_PROJECT: ${SENTRY_PROJECT}
    ports:
      - 3000:3000

  techlabblog:
    build:
      context: .
      target: techlabblog-runner
      args:
        - SENTRY_ORG
        - SENTRY_ENV
        - SENTRY_PROJECT
    environment:
      SENTRY_ORG: ${SENTRY_ORG}
      SENTRY_ENVIRONMENT: ${SENTRY_ENVIRONMENT}
      SENTRY_PROJECT: ${SENTRY_PROJECT}
    ports:
      - 3000:3000

  vpnmanager:
    build:
      secrets:
        - sentry_auth_token
      context: .
      target: vpnmanager-runner
      args:
        - SENTRY_ORG
        - SENTRY_PROJECT
        - SENTRY_DSN
        - API_SECRET_KEY
    environment:
      NODE_ENV: ${NODE_ENV:-production}
      NODE_TLS_REJECT_UNAUTHORIZED: 0
      NEXT_APP_VPN_API_URL: ${NEXT_APP_VPN_API_URL}
    ports:
      - ${VPN_MANAGER_PORT:-3000}:3000
    volumes:
      - ./db_data:/apps/vpnmanager/data
secrets:
  sentry_auth_token:
    environment: SENTRY_AUTH_TOKEN
volumes:
  db_data:
